// <auto-generated />
using System;
using BandManager.Api.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BandManager.Api.DAL.Migrations
{
    [DbContext(typeof(BandManagerContext))]
    [Migration("20240930111918_initial-migration")]
    partial class initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BandManager.Api.Resources.Models.Band", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Bands");
                });

            modelBuilder.Entity("BandManager.Api.Resources.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("BandId")
                        .HasColumnType("int");

                    b.Property<string>("BookingNotes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BookingNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ChangeOverTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DinnerTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsPublicEvent")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ParkingDetails")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PaymentDetails")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Planning")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ShowEndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ShowStartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("SoundCheckTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("StageNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TourbusLeaveTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("VenueId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BandId");

                    b.HasIndex("VenueId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("BandManager.Api.Resources.Models.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("DataLink")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("BandManager.Api.Resources.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("HasCar")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("HomeAdress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BandManager.Api.Resources.Models.Venue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactPhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Venues");
                });

            modelBuilder.Entity("BandUser", b =>
                {
                    b.Property<int>("BandsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("BandsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("BandUser");
                });

            modelBuilder.Entity("BandManager.Api.Resources.Models.Booking", b =>
                {
                    b.HasOne("BandManager.Api.Resources.Models.Band", null)
                        .WithMany("Bookings")
                        .HasForeignKey("BandId");

                    b.HasOne("BandManager.Api.Resources.Models.Venue", null)
                        .WithMany("Bookings")
                        .HasForeignKey("VenueId");
                });

            modelBuilder.Entity("BandManager.Api.Resources.Models.File", b =>
                {
                    b.HasOne("BandManager.Api.Resources.Models.Booking", null)
                        .WithMany("Files")
                        .HasForeignKey("BookingId");
                });

            modelBuilder.Entity("BandUser", b =>
                {
                    b.HasOne("BandManager.Api.Resources.Models.Band", null)
                        .WithMany()
                        .HasForeignKey("BandsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BandManager.Api.Resources.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BandManager.Api.Resources.Models.Band", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("BandManager.Api.Resources.Models.Booking", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("BandManager.Api.Resources.Models.Venue", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
